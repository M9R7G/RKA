#define ADDR     0x14
#include "LSA-lib.nxc"
#define US S4
#define ITXOIN_DENB 1000

const byte SensorPort  =  IN_1;

float err_ant=0;

//1=Gorria
//2=Berdea
//3=Urdina
//0=Beste bat

int kolore=0;
int kolore_helb=3;
int kont=0;
int aurr_kol=0;
int kont_helb=1;
bool bira=false;

float kp=0.25;
float ki=0.02;
float kd=0.002;


  

unsigned byte bal2[8];
int i;

task music() {
    PlayTone(TONE_A4, MS_500);
    Wait(500);
}
task talka ( )
{
	int balio;
	SetSensorLowspeed(US);
	while (true)
	{
		balio = SensorUS(US);
		if(balio<=25){
			Off(OUT_AC);
			Wait (ITXOIN_DENB);
		}
	}

}


task kolorea()
{

	SetSensorColorFull(S3);
	while (true){
		switch (SENSOR_3) {
			case INPUT_BLUECOLOR:
				kolore = 3; break;
			case INPUT_REDCOLOR:
				kolore = 1; break;
			case INPUT_GREENCOLOR:
				kolore = 2; break;
			default:
				kolore = 0; break;}
		//Wait(300);
		if(kolore!=0 && aurr_kol!=kolore){
			kont++;
			aurr_kol=kolore;
		}else if(kolore==0 && kont>=3){
			kont=0;
			aurr_kol=kolore;
		}

		if(kolore==kolore_helb && kont==kont_helb){
			bira=true;
			//StartTask(music);
		}
		
	}

}

task biratu(){
	Off(OUT_AC);
	OnFwdReg(OUT_A,30,OUT_REGMODE_SPEED);
	Wait(1500);
	Off(OUT_AC);
}
task biratu2(){
	float tot=0;
    float err_t=0;
    float err=0;
    float err_dif=0;
    float abiadura_dif=0;
    err=-0.4*100-0.3*100-0.2*100-0.1*100+0.1*100+0.2*50+0.3*0+0.4*0;
    err_t=err_t+err;
    err_dif=err-err_ant;
    abiadura_dif=err*kp;
    OnFwdReg(OUT_C,30+abiadura_dif,OUT_REGMODE_SPEED);
    OnFwdReg(OUT_A,30-abiadura_dif,OUT_REGMODE_SPEED);
}

task marra()
{
	LSA_WakeUp(SensorPort, ADDR);
	SetSensorLowspeed(SensorPort);

	byte line_loc[10];
	line_loc[0] = LCD_LINE1;
	line_loc[1] = LCD_LINE2;
	line_loc[2] = LCD_LINE3;
	line_loc[3] = LCD_LINE4;
	line_loc[4] = LCD_LINE5;
	line_loc[5] = LCD_LINE6;
	line_loc[6] = LCD_LINE7;
	line_loc[7] = LCD_LINE8;

	unsigned byte bal[8];

  while ( true ) {
      float tot=0;
      float err_t=0;
      float err=0;
      float err_dif=0;
      float abiadura_dif=0;
      for ( i=0; i < 8; i++) {
          bal[i] = 0;
          bal2[i] = 0;
      }
      LSA_ReadRaw_Calibrated (SensorPort, ADDR, bal);
      LSA_ReadRaw_Calibrated (SensorPort, ADDR, bal2);

      int beltzak=0; 
      int zuriak=0;
      int threshold=15;
      for(i=0;i<4;i++){
      	if(bal2[i]>=90){
      		zuriak++;
      	}
      }
      for (i=4; i<8;i++){
      	if(bal2[i]<=5){
      		beltzak++;
      	}
      }
      if (beltzak>=4 && bira==true){
      	Wait(100);
      	Off(OUT_AC);
		OnFwdReg(OUT_A,10,OUT_REGMODE_SPEED);
		OnRevReg(OUT_C,10,OUT_REGMODE_SPEED);
		Wait(1300);
		Off(OUT_AC);
		Wait(500);
      	bira=false;
      }else{
      	//err=-((bal[0]+bal[1]+bal[2]+bal[3])/4)+((bal[4]+bal[5]+bal[6]+bal[7])/4);
      	err=-0.4*bal[0]-0.3*bal[1]-0.2*bal[2]-0.1*bal[3]+0.1*bal[4]+0.2*bal[5]+0.3*bal[6]+0.4*bal[7];
      	err_t=err_t+err;
      	err_dif=err-err_ant;
      	if(abs(err)<27){
      		kp=0.01;
     	 }else if(abs(err)>85){
      		kp=0.15;
      	}
      	else{
      		kp=0.07;
      	}
      	abiadura_dif=err*kp;
     	OnFwdReg(OUT_C,20+abiadura_dif,OUT_REGMODE_SPEED);
      	OnFwdReg(OUT_A,20-abiadura_dif,OUT_REGMODE_SPEED);
      }

      

   }
}





task main()
{
	StartTask(talka);
	StartTask(kolorea);
	StartTask(marra);
}

